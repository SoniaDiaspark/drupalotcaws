<?php

/**
 * @file
 * OTC Skyword Update module.
 */

use Drupal\Core\Entity\EntityInterface;
use GuzzleHttp\Client as GuzzleClient;
use GuzzleHttp\Psr7\Request;
use Psr\Http\Message\UriInterface;
use GuzzleHttp\Exception\RequestException;

/**
 * Implements hook_ENTITY_TYPE_postinsert().
 */
function otc_skyword_update_node_postinsert(EntityInterface $entity) {  
  $id = $entity->id();
  $bundle = $entity->bundle();
  $is_published = $entity->isPublished();
  $skyword_id = $entity->get('field_skyword_id')->getValue();
  $skyword_node_id = $skyword_id[0]['value'];
  skyword_update($bundle, $is_published, $skyword_node_id);   
}

/**
 * Implements hook_ENTITY_TYPE_postupdate().
 */
function otc_skyword_update_node_postupdate(EntityInterface $entity) {
  \Drupal::logger('otc_skyword_update')
        ->info("otc_skyword_update_node_postupdate");
  $id = $entity->id();
  $bundle = $entity->bundle();
  $is_published = $entity->isPublished();
  $skyword_id = $entity->get('field_skyword_id')->getValue();
  $skyword_node_id = $skyword_id[0]['value'];  
  skyword_update($bundle, $is_published, $skyword_node_id);
}

/**
 * Implements skyword_update().
 */
function skyword_update($bundle, $is_published, $skyword_id) {
  
  if (($bundle == 'article') || ($bundle == 'project') || ($bundle == 'recipe')) {
    if ($is_published == '1') { 
      /*try {*/
        \Drupal::logger('otc_skyword_update')
        ->info("This published {$bundle} node having id {$skyword_id} will be removed from skyword feed");
        if (isset($_ENV['AH_SITE_ENVIRONMENT'])) {
            $env_variable = $_ENV['AH_SITE_ENVIRONMENT'];
        }
        if ($env_variable == 'prod') {
            $skyword_key = 'qep7eumvwqd6czpdxr4g';
        } else {
            $skyword_key = '3jbwqd5z9untd704yj6j';
        }

        \Drupal::logger('otc_skyword_update')
        ->info("Status {$env_variable}");

        $client = new GuzzleClient();
        $api_url = 'https://api.skyword.com/publish?key='.$skyword_key.'&contentId='.$skyword_id;
        $response = $client->request('GET',$api_url);
        $contents = $response->getBody()->getContents();
        print '<pre>';print_r($contents); exit;

        //$client = \Drupal::httpClient();
        //$response = $client->get('https://api.skyword.com/publish?key='.$skyword_key.'&contentId='.$skyword_id.'url=');   
        //$mess = $client->request('GET', 'https://api.skyword.com/publish?key='.$skyword_key.'&contentId='.$skyword_id.'url='); 

        \Drupal::logger('otc_skyword_update')
        ->info("Status {$response}");          
      /*}
      catch (RequestException $e) {
        return FALSE; 
      }*/        
    }  

  }
  
}
