<?php

use Drupal\Core\Entity;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Datetime\DrupalDateTime;
/**
 * Implement hook_entity_presave()
 * Set publication date automatically from current date 
 * when node status changed from unpublish to publish.
 * Also it will set publication date to current date when first time node is published.
 */
function otc_brands_content_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {

  $type = $entity->bundle();

  $entity_type = array(
    'article',
    'recipe',
    'product',
    'project',      
    );
  
  if (in_array($type, $entity_type)) {
    // Check if entity has publication date field.
    if($entity->hasField('field_publication_date')) {

      $cur_date = \Drupal::service('date.formatter')->format(time(), 'custom', 'Y-m-d\TH:i:s', 'UTC');
      // Get original entity object.
      $entity_original = $entity->original;
      // Get updated node status.
      $new_status = $entity->isPublished();
      // Check if node is new.
      if(!$entity->isNew()) {
        // Get previous node status.
        $old_status = $entity_original->isPublished();
        if ($old_status != 1 && $new_status == 1) {
          // Set the publication date field value with current date.
          $entity->set('field_publication_date', $cur_date);
        }
      }
      // New pusblished node.
      elseif ($new_status == 1) {
        // Set the publication date field value with current date.
        $entity->set('field_publication_date', $cur_date);
      }
    }
  }
}

/**
 * Implement hook_entity_update()
 * Update html file for content section
 */
function otc_brands_content_entity_update(Drupal\Core\Entity\EntityInterface $entity) {
  $type = $entity->bundle();
  if ($type == 'home_page') {
    generateHtmlFile($entity);
  }
}

/**
 * Implement hook_entity_insert()
 * Create html file for content section
 */
function otc_brands_content_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
  $type = $entity->bundle();
  if ($type == 'home_page') {
    generateHtmlFile($entity);
  }
}

/**
 * Generate html file
 * @param $entity is the object of current node
 */
function generateHtmlFile($entity) {
  $html = '';
  $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$entity->id());

  $alias = explode("/", $alias);
  $filename = $alias[3].'.html';
  $field_section = $entity->get('field_section')->getValue();
  foreach ($field_section as $key => $value) {
    $paragraphID = $value['target_id'];
    $p = \Drupal\paragraphs\Entity\Paragraph::load( $paragraphID );
    $text = $p->field_section_description->getValue();
    $html .= $text[0]['value'];
  }

  // Create directory if it doesnt exist
  $dir = 'public://otc_brands/' . $alias[1] . '/' . $alias[2];
  if (!is_dir($dir)) {
    mkdir($dir, 0755, TRUE);
  }

  if (is_dir($dir)) {
    if ($dh = opendir($dir)) {

      if ($filename != "") {
        $my_file = $dir . '/' . $filename;
        $handle = fopen($my_file, 'w') or die('Cannot open file:  ' . $my_file);
        $data = $html;
        if (fwrite($handle, $data) === FALSE) {
          fclose($my_file);
        }
      }
      closedir($dh);
    }
  }

}
